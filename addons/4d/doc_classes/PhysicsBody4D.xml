<?xml version="1.0" encoding="UTF-8" ?>
<class name="PhysicsBody4D" inherits="CollisionObject4D" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		Abstract base class for solid 4D physics bodies.
	</brief_description>
	<description>
		PhysicsBody4D is the base class for all solid 4D physics objects. This includes static bodies used for level geometry, character bodies used for kinematic movement, and rigid bodies used for dynamic physics simulation.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_gravity" qualifiers="const">
			<return type="Vector4" />
			<description>
				Returns the gravity vector computed from all sources that can affect the body, including the global world gravity. This does not include [member RigidBody4D.gravity_scale], see [method RigidBody4D.get_scaled_gravity].
			</description>
		</method>
		<method name="move_and_collide">
			<return type="KinematicCollision4D" />
			<param index="0" name="motion" type="Vector4" />
			<param index="1" name="test_only" type="bool" default="false" />
			<description>
				Moves the body by the given motion offset in 4D space, and collides it with other physics objects in the scene. If another solid objects is in the way, the body will stop moving. If the [param test_only] parameter is [code]true[/code], the body will not move but information about the collision that would have occurred will be returned.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="body_impacted_self">
			<param index="0" name="body" type="PhysicsBody4D" />
			<param index="1" name="kinematic_collision" type="KinematicCollision4D" />
			<description>
				Emitted when another PhysicsBody4D impacts/hits/collides with this PhysicsBody4D. Only the static PhysicsBody4D will have this signal emitted. The moving PhysicsBody4D will have the [signal self_impacted_body] signal emitted instead. If you need to listen to both, you can connect to both signals to the same function.
			</description>
		</signal>
		<signal name="self_impacted_body">
			<param index="0" name="body" type="PhysicsBody4D" />
			<param index="1" name="kinematic_collision" type="KinematicCollision4D" />
			<description>
				Emitted when this PhysicsBody4D impacts/hits/collides with another PhysicsBody4D. Only the moving PhysicsBody4D will have this signal emitted. The static PhysicsBody4D will have the [signal body_impacted_self] signal emitted instead. If you need to listen to both, you can connect to both signals to the same function.
			</description>
		</signal>
	</signals>
</class>
